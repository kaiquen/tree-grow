// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id            String             @id @default(uuid())
  walletAddress String             @unique
  level         Int                @default(1)
  treeProgress  Int                @default(0)
  lastWateredAt DateTime?
  coins         Int                @default(0)
  achievements  UserAchievements[] @relation("UserAchievements")
  withdrawals   Withdrawals[]
}

model Achievements {
  id             String             @id @default(uuid())
  code           String             @unique
  title          String
  description    String
  imageUrl       String
  conditionType  String
  conditionValue Int
  users          UserAchievements[] @relation("UserAchievements")
}

model UserAchievements {
  id            String       @id @default(uuid())
  user          Users        @relation(fields: [userId], references: [id], name: "UserAchievements")
  userId        String
  achievement   Achievements @relation(fields: [achievementId], references: [id], name: "UserAchievements")
  achievementId String
  createdAt     DateTime     @default(now())
}

model Withdrawals {
  id          String   @id @default(uuid())
  user        Users    @relation(fields: [userId], references: [id])
  userId      String
  amountETH   BigInt
  amountCoins Int
  createdAt   DateTime @default(now())
}
